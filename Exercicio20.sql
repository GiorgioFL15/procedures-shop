DROP DATABASE IF EXISTS DBCOMPRAPARCELADA;
CREATE DATABASE DBCOMPRAPARCELADA;
USE DBCOMPRAPARCELADA;

CREATE TABLE COMPRA (
	IDCOMPRA INT NOT NULL AUTO_INCREMENT
	, VALOR_TOTAL NUMERIC(8,2)
	, QTDE_PARCELA INT
	, DT_COMPRA DATETIME
    	, PRIMARY KEY (IDCOMPRA)
);

CREATE TABLE PARCELA(
	IDPARCELA INT NOT NULL AUTO_INCREMENT
    	, IDCOMPRA INT NOT NULL
    	, NUMERO INT
    	, DT_VENCIMENTO DATE
    	, VALOR NUMERIC(8,2)
    	, PRIMARY KEY (IDPARCELA)
    	, FOREIGN KEY (IDCOMPRA) REFERENCES COMPRA (IDCOMPRA)
);



DELIMITER $$
CREATE PROCEDURE STP_LANCAR_COMPRA(pVALOR_TOTAL INT, pQTDE_PARCELA NUMERIC(8,2))
BEGIN 

	DECLARE vIDCOMPRA INT;
    DECLARE vPARCELA INT DEFAULT 1;
	DECLARE vULTIMA_PARCELA INT;
    DECLARE vVALOR_PARCELA NUMERIC(8,2);
    DECLARE vSOMA_PARCELA NUMERIC(8,2);
    
	INSERT INTO COMPRA(VALOR_TOTAL, QTDE_PARCELA, DT_COMPRA)
	VALUES(pVALOR_TOTAL,pQTDE_PARCELA, NOW());
	
    SET vIDCOMPRA = last_insert_id();
    SET vPARCELA = 1;
    SET vVALOR_PARCELA = pVALOR_TOTAL / pQTDE_PARCELA;
    
    WHILE (vPARCELA <= pQTDE_PARCELA) DO 
    
		INSERT INTO PARCELA(IDCOMPRA, NUMERO, DT_VENCIMENTO, VALOR)
        VALUES(vIDCOMPRA, vPARCELA, date_add(NOW(), INTERVAL vPARCELA month) , vVALOR_PARCELA);
        
        SET vPARCELA = vPARCELA + 1; 
        
	END WHILE;
    
    SELECT MAX(IDPARCELA), SUM(VALOR)
    INTO vULTIMA_PARCELA, vSOMA_PARCELA
    FROM PARCELA
    WHERE IDCOMPRA = vIDCOMPRA;
    
  	SELECT MAX(IDPARCELA), SUM(VALOR)
    INTO vULTIMA_PARCELA, vSOMA_PARCELA
	FROM PARCELA
	WHERE IDCOMPRA = vIDCOMPRA;    
    
    -- AJUSTANDO VALORES ERRADOS E ACRESCENTANDO NA ULTIMA PARCELAS
    UPDATE PARCELA
    SET VALOR = VALOR + (pVALOR_TOTAL - vSOMA_PARCELA)
    WHERE IDPARCELA = vULTIMA_PARCELA;    
    
    
    


END $$



CALL STP_LANCAR_COMPRA(100,4);

SELECT * FROM COMPRA;
SELECT * FROM PARCELA WHERE IDCOMPRA = 1;
